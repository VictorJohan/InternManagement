<h4>Habilidades</h4>

@page "/Habilidades"
@page "/Habilidades/{HabilidadId:int}"

@inject IToastService toast

<EditForm Model="habilidades" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registro de Habilidades</h3>
        </div>

        <div class="card-body">
            <form>
                @*Habilidad Id*@
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>Habilidad Id</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="habilidades.HabilidadId" class="form-control" />
                                <div class="input-group-append ml-2">
                                    <button type="button" style="z-index:0" class="btn btn-secondary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Descripcion*@
                <div class="form-group">
                    <label>Descripcion</label>
                    <InputText @bind-Value="habilidades.Descripcion" class="form-control" />
                    <ValidationMessage For="@(() => habilidades.Descripcion)" />
                </div>


                @*Fecha Creacion*@
                <div class="form-group">
                    <label>Fecha del Registro</label>
                    <InputDate @bind-Value="habilidades.FechaCreacion" class="form-control" />
                    <ValidationMessage For="(() => habilidades.FechaCreacion)" />
                </div>



            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-success">Guardar</button>
                <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>

    </div>
</EditForm>

@code {

    [Inject]
    private HabilidadesBLL habilidadesBLL { get; set; }

    [Parameter]
    public int HabilidadId { get; set; }

    Habilidade habilidades = new Habilidade();

    protected override void OnInitialized()
    {
        Nuevo();

    }

    public async void Buscar()
    {
        var registro = await habilidadesBLL.Buscar(habilidades.HabilidadId);

        if (registro != null)
        {
            this.habilidades = registro;
            StateHasChanged();

        }
        else
        {
            toast.ShowInfo("No se encontró el registro.");
        }
    }

    public void Nuevo()
    {
        Limpiar();
    }

    public async void Guardar()
    {

        if (await habilidadesBLL.Guardar(habilidades))
        {

            toast.ShowSuccess("Guardado");
            Limpiar();
            StateHasChanged();
        }
        else
        {
            toast.ShowError("No se logró guardar el registro.");

        }
    }

    public async void Eliminar()
    {
        if (await habilidadesBLL.Eliminar(habilidades.HabilidadId))
        {
            toast.ShowSuccess("Eliminado");
            Limpiar();
            StateHasChanged();
        }
        else
        {
            toast.ShowError("No se logró eliminar el registro.");

        }
    }

    public void Limpiar()
    {
        this.habilidades = new Habilidade();
    }
}