<h3>Nacionalidades</h3>

@page "/CNacionalidades"

@inject IToastService toast

<div class="card-img">
    <div class="card-header">
        <h1>Consulta de Nacionalidades</h1>
    </div>

    <div class="card-body">
        <form>
            <div class="form-row">
                <div class="form-group">
                    <label>Filtrar por Fecha</label>
                    <select class="form-control" @bind="FiltroFecha">
                        <option value="0">Todo</option>
                        <option value="1">Fecha</option>
                    </select>
                </div>
                &nbsp;
                <div class="form-group">
                    <label>Desde</label>
                    <input type="date" @bind="Desde" class="form-control" />
                </div>
                &nbsp;
                <div class="form-group">
                    <label>Hasta</label>
                    <input type="date" @bind="Hasta" class="form-control" />
                </div>

                <div class="form-group ml-5">
                    <label>Filtro</label>
                    <select class="form-control" @bind="Filtro">
                        <option value="0">Todo</option>
                        <option value="1">Nacionalidad ID</option>
                    </select>
                </div>

                <div class="form-group ml-1">
                    <label>Criterio</label>
                    <div class="input-group">
                        <input type="text" @bind="Criterio" class="form-control">
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary input-group-text" @onclick="@(u => Consultar())"><i class="oi oi-list-rich" /> Consultar</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="table-responsive text-nowrap" style="position: relative; height:auto; overflow: auto; display: block;">
                <table class="table table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th>Nacionalidad Id</th>
                            <th>Nacionalidad</th>
                            <th>Fecha de Creacion del Registro</th>

                        </tr>
                    </thead>
                    <tbody class="bg-white">
                        @foreach (var item in NacionalidadesList)
                        {
                            <tr>
                                <td>@item.NacionalidadId</td>
                                <td>@item.Nacionalidad</td>
                                <td>@item.FechaCreacion.ToString("dd/MM/yyyy")</td>



                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </form>
    </div>
</div>

@code {

    public List<Nacionalidade> NacionalidadesList  { get; set; }

    private DateTime Desde { get; set; } = DateTime.Now;
    private DateTime Hasta { get; set; } = DateTime.Now;

    public string Filtro { get; set; }
    private string FiltroFecha { get; set; }

    public string Criterio { get; set; }

    [Inject]
    private NacionalidadesBLL nacionalidadesBLL { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
    }

    private void Nuevo()
    {
        NacionalidadesList = new List<Nacionalidade>();
        Filtro = "0";
        Criterio = string.Empty;
    }

    public async void Consultar()
    {
        int id;
        int.TryParse(Criterio, out id);
        switch (Filtro)
        {
            case "0": //Todo
                NacionalidadesList = await nacionalidadesBLL.GetNacionalidades(c => true);
                StateHasChanged();
                break;
            case "1":
                if (Criterio.Trim().Length > 0)
                {
                    try
                    {
                        NacionalidadesList = await nacionalidadesBLL.GetNacionalidades(c => c.NacionalidadId == id);
                        StateHasChanged();
                    }
                    catch (FormatException)
                    {
                        toast.ShowWarning("Ingrese un numero");
                    }
                }
                else
                {
                    NacionalidadesList = await nacionalidadesBLL.GetNacionalidades(c => true);
                    StateHasChanged();
                }
                break;
        }

        switch (FiltroFecha)
        {
            case "0": //Nada
                break;
            case "1": //Fecha
                NacionalidadesList = NacionalidadesList.Where(s => s.FechaCreacion >= Desde && s.FechaCreacion <= Hasta).ToList();
                StateHasChanged();
                break;

        }
    }
}
